name: CI/CD Pipeline for Flask App

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest tests/

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/my_ec2_key.pem
          chmod 600 ~/.ssh/my_ec2_key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts 

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/my_ec2_key.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            set -e  # Detener en caso de errores
            echo "Conectado a EC2"

            # Directorio de despliegue
            if [ ! -d "/home/ubuntu/app" ]; then
              sudo mkdir -p /home/ubuntu/app
              sudo chown -R ubuntu:ubuntu /home/ubuntu/app
              sudo chmod -R 755 /home/ubuntu/app
            fi

            cd /home/ubuntu/app
            git pull origin main || git clone https://github.com/DanielB3/pipeline-ci-cd.git .

            # Instalar dependencias
            pip install -r requirements.txt

            # Reiniciar la aplicaciÃ³n Flask
            sudo systemctl restart flask-app || sudo systemctl start flask-app
          EOF
